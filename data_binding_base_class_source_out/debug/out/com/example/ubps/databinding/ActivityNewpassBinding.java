// Generated by view binder compiler. Do not edit!
package com.example.ubps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ubps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNewpassBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final Button Submit;

  @NonNull
  public final CheckBox accept;

  @NonNull
  public final EditText distance;

  @NonNull
  public final EditText roostartt;

  @NonNull
  public final EditText rootstop;

  @NonNull
  public final EditText validity;

  private ActivityNewpassBinding(@NonNull View rootView, @NonNull Button Submit,
      @NonNull CheckBox accept, @NonNull EditText distance, @NonNull EditText roostartt,
      @NonNull EditText rootstop, @NonNull EditText validity) {
    this.rootView = rootView;
    this.Submit = Submit;
    this.accept = accept;
    this.distance = distance;
    this.roostartt = roostartt;
    this.rootstop = rootstop;
    this.validity = validity;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNewpassBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNewpassBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_newpass, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNewpassBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Submit;
      Button Submit = ViewBindings.findChildViewById(rootView, id);
      if (Submit == null) {
        break missingId;
      }

      id = R.id.accept;
      CheckBox accept = ViewBindings.findChildViewById(rootView, id);
      if (accept == null) {
        break missingId;
      }

      id = R.id.distance;
      EditText distance = ViewBindings.findChildViewById(rootView, id);
      if (distance == null) {
        break missingId;
      }

      id = R.id.roostartt;
      EditText roostartt = ViewBindings.findChildViewById(rootView, id);
      if (roostartt == null) {
        break missingId;
      }

      id = R.id.rootstop;
      EditText rootstop = ViewBindings.findChildViewById(rootView, id);
      if (rootstop == null) {
        break missingId;
      }

      id = R.id.validity;
      EditText validity = ViewBindings.findChildViewById(rootView, id);
      if (validity == null) {
        break missingId;
      }

      return new ActivityNewpassBinding(rootView, Submit, accept, distance, roostartt, rootstop,
          validity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
