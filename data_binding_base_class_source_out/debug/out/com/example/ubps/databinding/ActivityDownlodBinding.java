// Generated by view binder compiler. Do not edit!
package com.example.ubps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ubps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDownlodBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView name1;

  @NonNull
  public final TextView passId;

  @NonNull
  public final TextView passId1;

  @NonNull
  public final TextView route;

  @NonNull
  public final TextView route1;

  @NonNull
  public final TextView status;

  @NonNull
  public final TextView status1;

  @NonNull
  public final TextView validity;

  @NonNull
  public final TextView validity1;

  private ActivityDownlodBinding(@NonNull RelativeLayout rootView, @NonNull TextView name,
      @NonNull TextView name1, @NonNull TextView passId, @NonNull TextView passId1,
      @NonNull TextView route, @NonNull TextView route1, @NonNull TextView status,
      @NonNull TextView status1, @NonNull TextView validity, @NonNull TextView validity1) {
    this.rootView = rootView;
    this.name = name;
    this.name1 = name1;
    this.passId = passId;
    this.passId1 = passId1;
    this.route = route;
    this.route1 = route1;
    this.status = status;
    this.status1 = status1;
    this.validity = validity;
    this.validity1 = validity1;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDownlodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDownlodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_downlod, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDownlodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.name1;
      TextView name1 = ViewBindings.findChildViewById(rootView, id);
      if (name1 == null) {
        break missingId;
      }

      id = R.id.pass_id;
      TextView passId = ViewBindings.findChildViewById(rootView, id);
      if (passId == null) {
        break missingId;
      }

      id = R.id.pass_id1;
      TextView passId1 = ViewBindings.findChildViewById(rootView, id);
      if (passId1 == null) {
        break missingId;
      }

      id = R.id.route;
      TextView route = ViewBindings.findChildViewById(rootView, id);
      if (route == null) {
        break missingId;
      }

      id = R.id.route1;
      TextView route1 = ViewBindings.findChildViewById(rootView, id);
      if (route1 == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.status1;
      TextView status1 = ViewBindings.findChildViewById(rootView, id);
      if (status1 == null) {
        break missingId;
      }

      id = R.id.validity;
      TextView validity = ViewBindings.findChildViewById(rootView, id);
      if (validity == null) {
        break missingId;
      }

      id = R.id.validity1;
      TextView validity1 = ViewBindings.findChildViewById(rootView, id);
      if (validity1 == null) {
        break missingId;
      }

      return new ActivityDownlodBinding((RelativeLayout) rootView, name, name1, passId, passId1,
          route, route1, status, status1, validity, validity1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
